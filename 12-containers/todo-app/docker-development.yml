version: '3.3'
services:

  # MONGO DB
  mongo_service:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: the_username
      MONGO_INITDB_ROOT_PASSWORD: the_password
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  
  # REDIS API
  redis_service:
    image: redis:latest
    restart: always
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data

  # EXPRESS API
  express_backend:
    image: node:16
    depends_on:
      - mongo_service
      - redis_service
    # restart: always
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo_service:27017/the_database
      REDIS_URL: redis://redis_service:6379
      PORT: 3011
    ports:
        - 3001:3011
    volumes:
      - ./todo-backend/:/service_files
    working_dir: /service_files
    command: bash -c "npm install -y && npm start"

  # FRONTEND SERVICE
  react_frontend:
    image: node:16
    depends_on:
      - express_backend
    restart: always
    ports:
        - 3000:3000
    environment:
      REACT_APP_BACKEND_URL: http://express_backend:3011
    volumes:
      - ./todo-frontend/:/service_files
    working_dir: /service_files
    command: bash -c "npm install -y && npm start"

# clear && docker-compose -f docker-development.yml down && docker-compose -f docker-development.yml up --remove-orphans --no-recreate