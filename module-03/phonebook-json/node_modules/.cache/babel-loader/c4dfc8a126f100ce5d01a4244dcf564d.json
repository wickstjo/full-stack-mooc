{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from 'react';\nimport { fetch_people, create_person, remove_person } from './funcs/api';\nimport Header from './components/header';\nimport { Field } from './components/input';\nimport List from './components/list';\nimport Form from './components/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LIST OF PEOPLE\n  const [people, set_people] = useState([]); // LOAD PEOPLE FROM JSON DB\n\n  useEffect(() => {\n    fetch_people('http://localhost:3001/persons').then(result => {\n      set_people(result);\n    });\n  }, []); // INPUT STATES\n\n  const [input, set_input] = useState({\n    name: '',\n    number: '',\n    filter: ''\n  }); // UPDATE INPUT STATES\n\n  const update_field = (category, value) => {\n    set_input({ ...input,\n      [category]: value\n    });\n  }; // ADD PERSON\n\n\n  const add = event => {\n    event.preventDefault(); // IF INPUT IS NOT EMPTY\n\n    if (input.name.length > 0 && input.number.length > 0) {\n      // VERIFY WHETHER THE NAME ALREADY EXISTS\n      const exists = people.filter(person => person.name === input.name).length === 0 ? false : true; // IF IT DOES, ALERT & BREAK EARLY\n\n      if (exists) {\n        alert(`${input.name} already exists!`);\n        console.log('PERSON ALREADY EXISTS, ABORTING..');\n        return;\n      } // CREATE PERSON OBJECT\n\n\n      const person = {\n        name: input.name,\n        number: input.number\n      }; // PUSH PERSON TO THE DB\n\n      create_person('http://localhost:3001/persons', person).then(status => {\n        // IF SOMETHING WENT WRONG, ABORT\n        if (status !== 201) {\n          console.log('COULD NOT CREATE USER, ABORTING..');\n          return;\n        } // OTHERWISE, PUSH NEW ENTRY -- TO AVOID RELOAD\n\n\n        people.push(person); // UPDATE BOTH STATES\n\n        set_people(people);\n        set_input({\n          filter: input.filter,\n          name: '',\n          number: ''\n        });\n      });\n    }\n  }; // PROCESS REMOVAL\n\n\n  const remove = id => {\n    const url = `http://localhost:3001/persons/${id}`;\n    remove_person(url, id).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Phonebook'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      label: 'Filter by Name',\n      value: input.filter,\n      func: event => update_field('filter', event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Add Person'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      trigger: add_person,\n      update: update_field,\n      fields: [{\n        id: 'name',\n        label: 'what is their name?',\n        value: input.name\n      }, {\n        id: 'number',\n        label: 'what is their number?',\n        value: input.number\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Numbers'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: people,\n      keyword: input.filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Xxc4v3OQLkpIGyQb+vZWSLb3yR8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useState","fetch_people","create_person","remove_person","Header","Field","List","Form","App","people","set_people","then","result","input","set_input","name","number","filter","update_field","category","value","add","event","preventDefault","length","exists","person","alert","console","log","status","push","remove","id","url","response","target","add_person","label"],"sources":["/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js"],"sourcesContent":["import { Fragment, useEffect, useState } from 'react'\nimport { fetch_people, create_person, remove_person } from './funcs/api'\n\nimport Header from './components/header';\nimport { Field } from './components/input';\nimport List from './components/list';\nimport Form from './components/form';\n\nconst App = () => {\n\n    // LIST OF PEOPLE\n    const [people, set_people] = useState([])\n\n    // LOAD PEOPLE FROM JSON DB\n    useEffect(() => {\n        fetch_people('http://localhost:3001/persons').then(result => {\n            set_people(result)\n        })\n    }, [])\n\n    // INPUT STATES\n    const [input, set_input] = useState({\n        name: '',\n        number: '',\n        filter: ''\n    })\n\n    // UPDATE INPUT STATES\n    const update_field = (category, value) => {\n        set_input({\n            ...input,\n            [category]: value\n        })\n    }\n\n    // ADD PERSON\n    const add = event => {\n        event.preventDefault();\n        \n        // IF INPUT IS NOT EMPTY\n        if (input.name.length > 0 && input.number.length > 0) {\n\n            // VERIFY WHETHER THE NAME ALREADY EXISTS\n            const exists = people.filter(person => person.name === input.name).length === 0 ? false : true;\n\n            // IF IT DOES, ALERT & BREAK EARLY\n            if (exists) {\n                alert(`${ input.name } already exists!`)\n                console.log('PERSON ALREADY EXISTS, ABORTING..')\n                return\n            }\n\n            // CREATE PERSON OBJECT\n            const person = {\n                name: input.name,\n                number: input.number\n            }\n\n            // PUSH PERSON TO THE DB\n            create_person('http://localhost:3001/persons', person).then(status => {\n                \n                // IF SOMETHING WENT WRONG, ABORT\n                if (status !== 201) {\n                    console.log('COULD NOT CREATE USER, ABORTING..')\n                    return\n                }\n\n                // OTHERWISE, PUSH NEW ENTRY -- TO AVOID RELOAD\n                people.push(person)\n\n                // UPDATE BOTH STATES\n                set_people(people)\n                set_input({\n                    filter: input.filter,\n                    name: '',\n                    number: ''\n                })\n            })\n        }\n    }\n\n    // PROCESS REMOVAL\n    const remove = (id) => {\n        const url = `http://localhost:3001/persons/${ id }`\n\n        remove_person(url, id).then(response => {\n            console.log(response)\n        })\n    }\n\n    return (\n        <Fragment>\n            <Header text={ 'Phonebook' } />\n            <Field\n                label={ 'Filter by Name' }\n                value={ input.filter }\n                func={\n                    event => update_field('filter', event.target.value)\n                }\n            />\n            <Header text={ 'Add Person' } />\n            <Form\n                trigger={ add_person }\n                update={ update_field }\n                fields={[{\n                    id: 'name',\n                    label: 'what is their name?',\n                    value: input.name\n                }, {\n                    id: 'number',\n                    label: 'what is their number?',\n                    value: input.number\n                }]}\n            />\n            <Header text={ 'Numbers' } />\n            <List\n                data={ people }\n                keyword={ input.filter }\n            />\n        </Fragment>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}