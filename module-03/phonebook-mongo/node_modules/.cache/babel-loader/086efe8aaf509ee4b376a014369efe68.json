{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-02/phonebook-server/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport Header from './Header';\nimport { Field } from './Input';\nimport List from './List';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LIST OF PEOPLE\n  const [people, set_people] = useState([]);\n  useEffect(() => {}, []); // INPUT STATES\n\n  const [input, set_input] = useState({\n    name: '',\n    number: '',\n    filter: ''\n  }); // UPDATE INPUT STATES\n\n  const update_field = (category, value) => {\n    set_input({ ...input,\n      [category]: value\n    });\n  }; // ADD PERSON\n\n\n  const add_person = event => {\n    event.preventDefault(); // IF INPUT IS NOT EMPTY\n\n    if (input.name.length > 0 && input.number.length > 0) {\n      // VERIFY WHETHER THE NAME ALREADY EXISTS\n      const exists = people.filter(person => person.name === input.name).length === 0 ? false : true; // IF IT DOES, ALERT & BREAK EARLY\n\n      if (exists) {\n        alert(`${input.name} already exists!`);\n        return;\n      } // PUSH NEW ENTRY\n\n\n      people.push({ ...input,\n        id: people.length + 1\n      }); // UPDATE BOTH STATES\n\n      set_people(people);\n      set_input({ ...input,\n        name: '',\n        number: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Phonebook'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      label: 'Filter by Name',\n      value: input.filter,\n      func: event => update_field('filter', event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Add Person'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      trigger: add_person,\n      update: update_field,\n      fields: [{\n        id: 'name',\n        label: 'what is their name?',\n        value: input.name\n      }, {\n        id: 'number',\n        label: 'what is their number?',\n        value: input.number\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Numbers'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: people,\n      keyword: input.filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Xxc4v3OQLkpIGyQb+vZWSLb3yR8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useState","Header","Field","List","Form","App","people","set_people","useEffect","input","set_input","name","number","filter","update_field","category","value","add_person","event","preventDefault","length","exists","person","alert","push","id","target","label"],"sources":["/home/wickstjo/aalto/full-stack/module-02/phonebook-server/src/App.js"],"sourcesContent":["import { Fragment, useState } from 'react'\nimport Header from './Header';\nimport { Field } from './Input';\nimport List from './List';\nimport Form from './Form';\n\nconst App = () => {\n\n    // LIST OF PEOPLE\n    const [people, set_people] = useState([])\n\n    useEffect(() => {\n        \n    }, [])\n\n    // INPUT STATES\n    const [input, set_input] = useState({\n        name: '',\n        number: '',\n        filter: ''\n    })\n\n    // UPDATE INPUT STATES\n    const update_field = (category, value) => {\n        set_input({\n            ...input,\n            [category]: value\n        })\n    }\n\n    // ADD PERSON\n    const add_person = event => {\n        event.preventDefault();\n        \n        // IF INPUT IS NOT EMPTY\n        if (input.name.length > 0 && input.number.length > 0) {\n\n            // VERIFY WHETHER THE NAME ALREADY EXISTS\n            const exists = people.filter(person => person.name === input.name).length === 0 ? false : true;\n\n            // IF IT DOES, ALERT & BREAK EARLY\n            if (exists) {\n                alert(`${ input.name } already exists!`)\n                return\n            }\n\n            // PUSH NEW ENTRY\n            people.push({\n                ...input,\n                id: people.length +1\n            })\n\n            // UPDATE BOTH STATES\n            set_people(people)\n            set_input({\n                ...input,\n                name: '',\n                number: ''\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <Header text={ 'Phonebook' } />\n            <Field\n                label={ 'Filter by Name' }\n                value={ input.filter }\n                func={\n                    event => update_field('filter', event.target.value)\n                }\n            />\n            <Header text={ 'Add Person' } />\n            <Form\n                trigger={ add_person }\n                update={ update_field }\n                fields={[{\n                    id: 'name',\n                    label: 'what is their name?',\n                    value: input.name\n                }, {\n                    id: 'number',\n                    label: 'what is their number?',\n                    value: input.number\n                }]}\n            />\n            <Header text={ 'Numbers' } />\n            <List\n                data={ people }\n                keyword={ input.filter }\n            />\n        </Fragment>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}