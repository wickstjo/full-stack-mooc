{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport Header from './Header';\nimport Field from './Field';\nimport Submit from './Submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LIST OF PEOPLE\n  const [people, set_people] = useState([{\n    name: 'Arto Hellas',\n    number: '040',\n    id: 1\n  }]); // INPUT STATES\n\n  const [input, set_input] = useState({\n    name: '',\n    number: '',\n    filter: ''\n  }); // UPDATE INPUT STATES\n\n  const update_field = (category, value) => {\n    set_input({ ...input,\n      [category]: value\n    });\n  }; // ADD PERSON\n\n\n  const add_person = event => {\n    event.preventDefault(); // IF INPUT IS NOT EMPTY\n\n    if (input.name.length > 0 && input.number.length > 0) {\n      // VERIFY WHETHER THE NAME ALREADY EXISTS\n      const exists = people.filter(person => person.name === input.name).length === 0 ? false : true; // IF IT DOES, ALERT & BREAK EARLY\n\n      if (exists) {\n        alert(`${input.name} already exists!`);\n        return;\n      } // PUSH NEW ENTRY\n\n\n      people.push({ ...input,\n        id: people.length + 1\n      }); // UPDATE BOTH STATES\n\n      set_people(people);\n      set_input({ ...input,\n        name: '',\n        number: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Phonebook'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      label: 'Filter by Name',\n      value: input.filter,\n      func: event => update_field('filter', event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Add Person'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      trigger: add_person,\n      update: update_field,\n      fields: [{\n        id: 'name',\n        label: 'what is their name?',\n        value: input.name\n      }, {\n        id: 'number',\n        label: 'what is their number?',\n        value: input.number\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Numbers'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: people,\n      keyword: input.filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"R0ntqYHiPe8UGCkfbg9hDhyTvTo=\");\n\n_c = App;\n\nconst Form = _ref => {\n  let {\n    trigger,\n    update,\n    fields\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: trigger,\n    children: [fields.map(field => /*#__PURE__*/_jsxDEV(Field, {\n      label: field.label,\n      value: field.value,\n      func: event => update(field.id, event.target.value)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Submit, {\n      label: 'Add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Form;\n\nconst List = _ref2 => {\n  let {\n    data,\n    keyword\n  } = _ref2;\n  // FILTER OUT GARBAGE\n  const filtered = data.filter(person => person.name.toLowerCase().includes(keyword));\n\n  switch (filtered.length) {\n    // NO PEOPLE FOUND\n    case 0:\n      {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"No-one matches keyword \\\"\", keyword, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this);\n      }\n    // RENDER PEOPLE\n\n    default:\n      {\n        return filtered.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [person.name, \": \", person.number]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this));\n      }\n  }\n};\n\n_c3 = List;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"names":["Fragment","useState","Header","Field","Submit","App","people","set_people","name","number","id","input","set_input","filter","update_field","category","value","add_person","event","preventDefault","length","exists","person","alert","push","target","label","Form","trigger","update","fields","map","field","List","data","keyword","filtered","toLowerCase","includes"],"sources":["/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js"],"sourcesContent":["import { Fragment, useState } from 'react'\nimport Header from './Header';\nimport Field from './Field';\nimport Submit from './Submit';\n\nconst App = () => {\n\n    // LIST OF PEOPLE\n    const [people, set_people] = useState([{\n        name: 'Arto Hellas',\n        number: '040',\n        id: 1\n    }])\n\n    // INPUT STATES\n    const [input, set_input] = useState({\n        name: '',\n        number: '',\n        filter: ''\n    })\n\n    // UPDATE INPUT STATES\n    const update_field = (category, value) => {\n        set_input({\n            ...input,\n            [category]: value\n        })\n    }\n\n    // ADD PERSON\n    const add_person = event => {\n        event.preventDefault();\n        \n        // IF INPUT IS NOT EMPTY\n        if (input.name.length > 0 && input.number.length > 0) {\n\n            // VERIFY WHETHER THE NAME ALREADY EXISTS\n            const exists = people.filter(person => person.name === input.name).length === 0 ? false : true;\n\n            // IF IT DOES, ALERT & BREAK EARLY\n            if (exists) {\n                alert(`${ input.name } already exists!`)\n                return\n            }\n\n            // PUSH NEW ENTRY\n            people.push({\n                ...input,\n                id: people.length +1\n            })\n\n            // UPDATE BOTH STATES\n            set_people(people)\n            set_input({\n                ...input,\n                name: '',\n                number: ''\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <Header text={ 'Phonebook' } />\n            <Field\n                label={ 'Filter by Name' }\n                value={ input.filter }\n                func={\n                    event => update_field('filter', event.target.value)\n                }\n            />\n            <Header text={ 'Add Person' } />\n            <Form\n                trigger={ add_person }\n                update={ update_field }\n                fields={[{\n                    id: 'name',\n                    label: 'what is their name?',\n                    value: input.name\n                }, {\n                    id: 'number',\n                    label: 'what is their number?',\n                    value: input.number\n                }]}\n            />\n            <Header text={ 'Numbers' } />\n            <List\n                data={ people }\n                keyword={ input.filter }\n            />\n        </Fragment>\n    )\n}\n\nconst Form = ({ trigger, update, fields }) => { return (\n    <form onSubmit={ trigger }>\n        { fields.map(field =>\n            <Field\n                key={ field.id }\n                label={ field.label }\n                value={ field.value }\n                func={\n                    event => update(field.id, event.target.value)\n                }\n            />\n        )}\n        <Submit label={ 'Add' } />\n    </form>\n)}\n\nconst List = ({ data, keyword }) => {\n\n    // FILTER OUT GARBAGE\n    const filtered = data.filter(person => person.name.toLowerCase().includes(keyword))\n    \n    switch (filtered.length) {\n\n        // NO PEOPLE FOUND\n        case 0: { return (\n            <div>No-one matches keyword \"{ keyword }\"</div>\n        )}\n\n        // RENDER PEOPLE\n        default: { return (\n            filtered.map(person =>\n                <li key={ person.id }>{ person.name }: { person.number }</li>\n            )\n        )}\n    }\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}