{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-01/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // COMPONENT DATA\n  const [count, set_count] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0\n  }); // INCREMENT CATEGORY COUNT\n\n  const update = category => {\n    set_count({ ...count,\n      [category]: count[category] + 1,\n      total: count.total + 1\n    });\n  }; // VOTE STATISTICS\n\n\n  const [stats, set_stats] = useState({\n    positive: 0,\n    average: 0\n  }); // UPDATE STATS WHEN COUNTS CHANGE\n\n  useEffect(() => {\n    set_stats({\n      positive: count.good / count.total,\n      average: (count.good - count.bad) / count.total\n    });\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Give Feedback'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      keys: ['good', 'neutral', 'bad'],\n      increment: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Statistics'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      data: { ...count,\n        ...stats\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"sGr6IxGAvllscVbQDE6xnA+dI/A=\");\n\n_c = App;\n\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Header;\n\nconst Buttons = _ref2 => {\n  let {\n    keys,\n    increment\n  } = _ref2;\n  return keys.map((name, index) => /*#__PURE__*/_jsxDEV(Button, {\n    label: name,\n    func: () => increment(name)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this));\n};\n\n_c3 = Buttons;\n\nconst Button = _ref3 => {\n  let {\n    label,\n    func\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: func,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Button;\n\nconst Statistics = _ref4 => {\n  let {\n    data\n  } = _ref4;\n\n  switch (data.total) {\n    // NO FEEDBACK YET\n    case 0:\n      {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No feedback given.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }\n    // RENDER FEEDBACK\n\n    default:\n      {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          children: Object.keys(data).map((name, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Foo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      }\n  }\n};\n\n_c5 = Statistics;\n\nconst Stat = _ref5 => {\n  let {\n    name,\n    value\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"foo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Stat;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Statistics\");\n$RefreshReg$(_c6, \"Stat\");","map":{"version":3,"names":["useState","Fragment","useEffect","App","count","set_count","good","neutral","bad","total","update","category","stats","set_stats","positive","average","Header","text","Buttons","keys","increment","map","name","index","Button","label","func","Statistics","data","Object","Stat","value"],"sources":["/home/wickstjo/aalto/full-stack/module-01/unicafe/src/App.js"],"sourcesContent":["import { useState, Fragment, useEffect } from 'react';\n\nconst App = () => {\n\n    // COMPONENT DATA\n    const [count, set_count] = useState({\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        total: 0\n    })\n\n    // INCREMENT CATEGORY COUNT\n    const update = (category) => {\n        set_count({\n            ...count,\n            [category]: count[category] + 1,\n            total: count.total + 1\n        })\n    }\n\n    // VOTE STATISTICS\n    const [stats, set_stats] = useState({\n        positive: 0,\n        average: 0\n    })\n\n    // UPDATE STATS WHEN COUNTS CHANGE\n    useEffect(() => {\n        set_stats({\n            positive: count.good / count.total,\n            average: (count.good - count.bad) / count.total\n        })\n    }, [count])\n  \n    return (\n        <Fragment>\n            <Header text={ 'Give Feedback' } />\n            <Buttons\n                keys={[\n                    'good', 'neutral', 'bad'\n                ]}\n                increment={ update }\n            />\n            <Header text={ 'Statistics' } />\n            <Statistics\n                data={{\n                    ...count,\n                    ...stats\n                }}\n            />\n        </Fragment>\n    )\n}\n\nconst Header = ({ text }) => { return (\n    <h1>{ text }</h1>\n)}\n\nconst Buttons = ({ keys, increment }) => { return (\n    keys.map((name, index) =>\n        <Button\n            label={ name }\n            func={ () => increment(name) }\n            key={ index }\n        />\n    )\n)}\n\nconst Button = ({ label, func }) => { return (\n    <button onClick={ func }>{ label }</button>\n)}\n\nconst Statistics = ({ data }) => {\n    switch(data.total) {\n\n        // NO FEEDBACK YET\n        case 0: { return (\n            <div>No feedback given.</div>\n        )}\n\n        // RENDER FEEDBACK\n        default: { return (\n            <table>\n                { Object.keys(data).map((name, index) =>\n                    <tbody key={ index }>\n                        <td>Foo</td>\n                        <td>Bar</td>\n                    </tbody>\n                )}\n            </table>\n        )}\n    }\n}\n\nconst Stat = ({ name, value }) => { return (\n    <div>foo</div>\n)}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}