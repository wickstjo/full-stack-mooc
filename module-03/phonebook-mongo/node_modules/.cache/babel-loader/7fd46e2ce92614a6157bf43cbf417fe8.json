{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-01/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // COMPONENT DATA\n  const [count, set_count] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0\n  }); // INCREMENT CATEGORY\n\n  const update = category => {\n    set_count({ ...count,\n      [category]: count[category] + 1,\n      total: count.total + 1\n    });\n  }; // VOTE STATISTICS\n\n\n  const [stats, set_stats] = useState({\n    positive: 0,\n    average: 0\n  }); // UPDATE STATS WHEN COUNTS CHANGE\n\n  useEffect(() => {\n    set_stats({\n      positive: count.good / count.total,\n      average: (count.good - count.bad) / count.total\n    });\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Give Feedback'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      keys: ['good', 'neutral', 'bad'],\n      increment: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Statistics'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      keys: Object.keys({ ...count,\n        ...stats\n      }),\n      values: { ...count,\n        ...stats\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Z4VbRWKbLnLw2056uwHfoXPwgeQ=\");\n\n_c = App;\n\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Header;\n\nconst Buttons = _ref2 => {\n  let {\n    keys,\n    increment\n  } = _ref2;\n  return keys.map((name, index) => /*#__PURE__*/_jsxDEV(Button, {\n    label: name,\n    func: () => increment(name)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this));\n};\n\n_c3 = Buttons;\n\nconst Button = _ref3 => {\n  let {\n    label,\n    func\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: func,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Button;\n\nconst Statistics = _ref4 => {\n  let {\n    keys,\n    values\n  } = _ref4;\n\n  switch (values.total) {\n    // NO FEEDBACK YET\n    case 0:\n      {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No feedback given.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      }\n    // RENDER FEEDBACK\n\n    default:\n      {\n        return keys.map((name, index) => /*#__PURE__*/_jsxDEV(Stat, {\n          name: name,\n          value: values[name]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this));\n      }\n  }\n};\n\n_c5 = Statistics;\n\nconst Stat = _ref5 => {\n  let {\n    name,\n    value\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [name, \": \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Stat;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Buttons\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Statistics\");\n$RefreshReg$(_c6, \"Stat\");","map":{"version":3,"names":["useState","Fragment","useEffect","App","count","set_count","good","neutral","bad","total","update","category","stats","set_stats","positive","average","Object","keys","Header","text","Buttons","increment","map","name","index","Button","label","func","Statistics","values","Stat","value"],"sources":["/home/wickstjo/aalto/full-stack/module-01/unicafe/src/App.js"],"sourcesContent":["import { useState, Fragment, useEffect } from 'react';\n\nconst App = () => {\n\n    // COMPONENT DATA\n    const [count, set_count] = useState({\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        total: 0,\n    })\n\n    // INCREMENT CATEGORY\n    const update = (category) => {\n        set_count({\n            ...count,\n            [category]: count[category] + 1,\n            total: count.total + 1\n        })\n    }\n\n    // VOTE STATISTICS\n    const [stats, set_stats] = useState({\n        positive: 0,\n        average: 0\n    })\n\n    // UPDATE STATS WHEN COUNTS CHANGE\n    useEffect(() => {\n        set_stats({\n            positive: count.good / count.total,\n            average: (count.good - count.bad) / count.total\n        })\n    }, [count])\n  \n    return (\n        <Fragment>\n            <Header text={ 'Give Feedback' } />\n            <Buttons\n                keys={[\n                    'good', 'neutral', 'bad'\n                ]}\n                increment={ update }\n            />\n            <Header text={ 'Statistics' } />\n            <Statistics\n                keys={ Object.keys({\n                    ...count,\n                    ...stats\n                }) }\n                values={{\n                    ...count,\n                    ...stats\n                }}\n            />\n        </Fragment>\n    )\n}\n\nconst Header = ({ text }) => { return (\n    <h1>{ text }</h1>\n)}\n\nconst Buttons = ({ keys, increment }) => { return (\n    keys.map((name, index) =>\n        <Button\n            label={ name }\n            func={ () => increment(name) }\n            key={ index }\n        />\n    )\n)}\n\nconst Button = ({ label, func }) => { return (\n    <button onClick={ func }>{ label }</button>\n)}\n\nconst Statistics = ({ keys, values }) => {\n    switch(values.total) {\n\n        // NO FEEDBACK YET\n        case 0: { return (\n            <div>No feedback given.</div>\n        )}\n\n        // RENDER FEEDBACK\n        default: { return (\n            keys.map((name, index) =>\n                <Stat\n                    key={ index }\n                    name={ name }\n                    value={ values[name] }\n                />\n            )\n        )}\n    }\n}\n\nconst Stat = ({ name, value }) => { return (\n    <div>{ name }: { value }</div>\n)}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}