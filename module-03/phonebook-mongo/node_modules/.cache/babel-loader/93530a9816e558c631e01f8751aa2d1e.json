{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport Header from './Header';\nimport Field from './Field';\nimport Submit from './Submit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LIST OF PEOPLE\n  const [people, set_people] = useState([{\n    name: 'Arto Hellas'\n  }]); // INPUT STATES\n\n  const [input, set_input] = useState({\n    name: '',\n    number: ''\n  }); // UPDATE INPUT STATES\n\n  const update_field = (category, value) => {\n    set_input({ ...input,\n      [category]: value\n    });\n  }; // ADD PERSON\n\n\n  const add_person = event => {\n    event.preventDefault(); // IF INPUT IS NOT EMPTY\n\n    if (input.name.length > 0 && input.number.length > 0) {\n      // VERIFY WHETHER THE NAME ALREADY EXISTS\n      const exists = people.indexOf(input) === -1 ? false : true; // IF IT DOES, ALERT & BREAK EARLY\n\n      if (exists) {\n        alert('Foo');\n        return;\n      } // PUSH NEW ENTRY\n\n\n      people.push(input); // UPDATE BOTH STATES\n\n      set_people(people);\n      set_input({\n        name: '',\n        number: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'Phonebook'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      trigger: add_person,\n      update: update_field,\n      fields: [{\n        id: 'name',\n        label: 'what is their name?',\n        value: input.name\n      }, {\n        id: 'number',\n        label: 'what is their number?',\n        value: input.number\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'Numbers'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"n+IQTlz0rQb6mc/GWrw2COGM5c0=\");\n\n_c = App;\n\nconst Form = _ref => {\n  let {\n    trigger,\n    update,\n    fields\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: trigger,\n    children: [fields.map(field => /*#__PURE__*/_jsxDEV(Field, {\n      label: field.label,\n      value: field.value,\n      func: event => update(field.id, event.target.value)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Submit, {\n      label: 'Add'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Form;\n\nconst List = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return data.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: person.name\n  }, person.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this));\n};\n\n_c3 = List;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"names":["Fragment","useState","Header","Field","Submit","App","people","set_people","name","input","set_input","number","update_field","category","value","add_person","event","preventDefault","length","exists","indexOf","alert","push","id","label","Form","trigger","update","fields","map","field","target","List","data","person"],"sources":["/home/wickstjo/aalto/full-stack/module-02/phonebook/src/App.js"],"sourcesContent":["import { Fragment, useState } from 'react'\nimport Header from './Header';\nimport Field from './Field';\nimport Submit from './Submit';\n\nconst App = () => {\n\n    // LIST OF PEOPLE\n    const [people, set_people] = useState([\n        { name: 'Arto Hellas' }\n    ]) \n\n    // INPUT STATES\n    const [input, set_input] = useState({\n        name: '',\n        number: ''\n    })\n\n    // UPDATE INPUT STATES\n    const update_field = (category, value) => {\n        set_input({\n            ...input,\n            [category]: value\n        })\n    }\n\n    // ADD PERSON\n    const add_person = event => {\n        event.preventDefault();\n        \n        // IF INPUT IS NOT EMPTY\n        if (input.name.length > 0 && input.number.length > 0) {\n\n            // VERIFY WHETHER THE NAME ALREADY EXISTS\n            const exists = people.indexOf(input) === -1 ? false : true;\n\n            // IF IT DOES, ALERT & BREAK EARLY\n            if (exists) {\n                alert('Foo')\n                return\n            }\n\n            // PUSH NEW ENTRY\n            people.push(input)\n\n            // UPDATE BOTH STATES\n            set_people(people)\n            set_input({\n                name: '',\n                number: ''\n            })\n        }\n    }\n\n    return (\n        <Fragment>\n            <Header text={ 'Phonebook' } />\n            <Form\n                trigger={ add_person }\n                update={ update_field }\n                fields={[{\n                    id: 'name',\n                    label: 'what is their name?',\n                    value: input.name\n                }, {\n                    id: 'number',\n                    label: 'what is their number?',\n                    value: input.number\n                }]}\n            />\n            <Header text={ 'Numbers' } />\n            <List data={ people } />\n        </Fragment>\n    )\n}\n\nconst Form = ({ trigger, update, fields }) => { return (\n    <form onSubmit={ trigger }>\n        { fields.map(field =>\n            <Field\n                key={ field.id }\n                label={ field.label }\n                value={ field.value }\n                func={\n                    event => update(field.id, event.target.value)\n                }\n            />\n        )}\n        <Submit label={ 'Add' } />\n    </form>\n)}\n\nconst List = ({ data }) => { return (\n    data.map(person =>\n        <li key={ person.name }>{ person.name }</li>\n    )\n)}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}