{"ast":null,"code":"import axios from 'axios'; // BASE URL FOR REQUESTS\n\nconst base_url = 'http://localhost:3001/api/persons'; // PROCESS REQUEST\n\nconst request = async query => {\n  try {\n    const response = await query;\n    return resolve(response);\n  } catch (error) {\n    return {\n      status: 500,\n      payload: error\n    };\n  }\n}; // RESOLVE RESPONSE\n\n\nconst resolve = response => {\n  switch (response.status) {\n    // ALL OK\n    case 200:\n      {\n        return {\n          status: response.status,\n          payload: response.data\n        };\n      }\n    // USER CREATED\n\n    case 201:\n      {\n        return {\n          status: response.status,\n          payload: response.data\n        };\n      }\n    // FALLBACK\n\n    default:\n      {\n        console.log('WEIRD RESPONSE STATUS');\n        return response;\n      }\n  }\n}; // FETCH EXISTING PEOPLE FROM DB\n\n\nconst fetch_people = async () => {\n  const query = axios.get(base_url);\n  const response = await request(query);\n  return response;\n}; // CREATE NEW PERSON IN DB\n\n\nconst create_person = async person => {\n  const query = axios.post(base_url, person);\n  const response = await request(query);\n  return response;\n}; // REMOVE PERSON FROM DB\n\n\nconst remove_person = person_id => {\n  // CONCAT THE BASE URL\n  const url = base_url + '/' + person_id;\n  return axios.delete(url).then(response => {\n    return resolve(response);\n  });\n}; // REMOVE PERSON FROM DB\n\n\nconst update_person = (person_id, payload) => {\n  // CONCAT THE BASE URL\n  const url = base_url + '/' + person_id;\n  return axios.put(url, payload).then(response => {\n    return resolve(response);\n  });\n};\n\nexport { fetch_people, create_person, remove_person, update_person };","map":{"version":3,"names":["axios","base_url","request","query","response","resolve","error","status","payload","data","console","log","fetch_people","get","create_person","person","post","remove_person","person_id","url","delete","then","update_person","put"],"sources":["/home/wickstjo/aalto/full-stack/module-03/phonebook-mongo/src/funcs/db.js"],"sourcesContent":["import axios from 'axios'\n\n// BASE URL FOR REQUESTS\nconst base_url = 'http://localhost:3001/api/persons';\n\n// PROCESS REQUEST\nconst request = async(query) => {\n    try {\n        const response = await query;\n        return resolve(response)\n\n    } catch(error) {\n        return {\n            status: 500,\n            payload: error\n        }\n    }\n}\n\n// RESOLVE RESPONSE\nconst resolve = (response) => {\n    switch (response.status)Â {\n\n        // ALL OK\n        case 200: {\n            return {\n                status: response.status,\n                payload: response.data\n            }\n        }\n\n        // USER CREATED\n        case 201: {\n            return {\n                status: response.status,\n                payload: response.data\n            }\n        }\n\n        // FALLBACK\n        default: {\n            console.log('WEIRD RESPONSE STATUS')\n            return response\n        }\n    }\n}\n\n// FETCH EXISTING PEOPLE FROM DB\nconst fetch_people = async() => {\n    const query = axios.get(base_url);\n    const response = await request(query)\n\n    return response\n}\n\n// CREATE NEW PERSON IN DB\nconst create_person = async(person) => {\n    const query = axios.post(base_url, person);\n    const response = await request(query)\n    \n    return response\n}\n\n// REMOVE PERSON FROM DB\nconst remove_person = (person_id) => {\n\n    // CONCAT THE BASE URL\n    const url = base_url + '/' + person_id\n\n    return axios.delete(url).then(response => {\n        return resolve(response)\n    })\n}\n\n// REMOVE PERSON FROM DB\nconst update_person = (person_id, payload) => {\n\n    // CONCAT THE BASE URL\n    const url = base_url + '/' + person_id\n\n    return axios.put(url, payload).then(response => {\n        return resolve(response)\n    })\n}\n\nexport {\n    fetch_people,\n    create_person,\n    remove_person,\n    update_person\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,mCAAjB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAMC,KAAN,IAAgB;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMD,KAAvB;IACA,OAAOE,OAAO,CAACD,QAAD,CAAd;EAEH,CAJD,CAIE,OAAME,KAAN,EAAa;IACX,OAAO;MACHC,MAAM,EAAE,GADL;MAEHC,OAAO,EAAEF;IAFN,CAAP;EAIH;AACJ,CAXD,C,CAaA;;;AACA,MAAMD,OAAO,GAAID,QAAD,IAAc;EAC1B,QAAQA,QAAQ,CAACG,MAAjB;IAEI;IACA,KAAK,GAAL;MAAU;QACN,OAAO;UACHA,MAAM,EAAEH,QAAQ,CAACG,MADd;UAEHC,OAAO,EAAEJ,QAAQ,CAACK;QAFf,CAAP;MAIH;IAED;;IACA,KAAK,GAAL;MAAU;QACN,OAAO;UACHF,MAAM,EAAEH,QAAQ,CAACG,MADd;UAEHC,OAAO,EAAEJ,QAAQ,CAACK;QAFf,CAAP;MAIH;IAED;;IACA;MAAS;QACLC,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACA,OAAOP,QAAP;MACH;EAtBL;AAwBH,CAzBD,C,CA2BA;;;AACA,MAAMQ,YAAY,GAAG,YAAW;EAC5B,MAAMT,KAAK,GAAGH,KAAK,CAACa,GAAN,CAAUZ,QAAV,CAAd;EACA,MAAMG,QAAQ,GAAG,MAAMF,OAAO,CAACC,KAAD,CAA9B;EAEA,OAAOC,QAAP;AACH,CALD,C,CAOA;;;AACA,MAAMU,aAAa,GAAG,MAAMC,MAAN,IAAiB;EACnC,MAAMZ,KAAK,GAAGH,KAAK,CAACgB,IAAN,CAAWf,QAAX,EAAqBc,MAArB,CAAd;EACA,MAAMX,QAAQ,GAAG,MAAMF,OAAO,CAACC,KAAD,CAA9B;EAEA,OAAOC,QAAP;AACH,CALD,C,CAOA;;;AACA,MAAMa,aAAa,GAAIC,SAAD,IAAe;EAEjC;EACA,MAAMC,GAAG,GAAGlB,QAAQ,GAAG,GAAX,GAAiBiB,SAA7B;EAEA,OAAOlB,KAAK,CAACoB,MAAN,CAAaD,GAAb,EAAkBE,IAAlB,CAAuBjB,QAAQ,IAAI;IACtC,OAAOC,OAAO,CAACD,QAAD,CAAd;EACH,CAFM,CAAP;AAGH,CARD,C,CAUA;;;AACA,MAAMkB,aAAa,GAAG,CAACJ,SAAD,EAAYV,OAAZ,KAAwB;EAE1C;EACA,MAAMW,GAAG,GAAGlB,QAAQ,GAAG,GAAX,GAAiBiB,SAA7B;EAEA,OAAOlB,KAAK,CAACuB,GAAN,CAAUJ,GAAV,EAAeX,OAAf,EAAwBa,IAAxB,CAA6BjB,QAAQ,IAAI;IAC5C,OAAOC,OAAO,CAACD,QAAD,CAAd;EACH,CAFM,CAAP;AAGH,CARD;;AAUA,SACIQ,YADJ,EAEIE,aAFJ,EAGIG,aAHJ,EAIIK,aAJJ"},"metadata":{},"sourceType":"module"}