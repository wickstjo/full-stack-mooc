{"ast":null,"code":"var _jsxFileName = \"/home/wickstjo/aalto/full-stack/module-03/phonebook-mongo/src/app.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Form, Text, Number, Button } from './components/form';\nimport Phonebook from './components/phonebook';\nimport Notifications from './components/notifications';\nimport { fetch_people, create_person } from './funcs/db';\nimport './interface/general.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // LIST OF PEOPLE\n  const [people, set_people] = useState([]); // LIST OF NOTIFICATIONS\n\n  const [notifications, set_notifications] = useState([]); // INPUT STATES\n\n  const [input, set_input] = useState({\n    filter: '',\n    name: '',\n    number: ''\n  }); // ON LOAD, FETCH ALL PEOPLE\n\n  useEffect(() => {\n    // axios.get('http://localhost:3001/api/persons').then(result => {\n    //     set_people(result.data)\n    // }).catch(error => {\n    //     console.log(error)\n    // })\n    fetch_people().then(response => {\n      if (response.status === 200) {\n        set_people(result.payload);\n      } else {}\n\n      console.log(response);\n    });\n  }, []); // UPDATE INPUT STATES\n\n  const update_field = (category, value) => {\n    set_input({ ...input,\n      [category]: value\n    });\n  }; // CREATE NOTIFICATION\n\n\n  const notify = params => {\n    set_notifications([...notifications, {\n      type: params.type,\n      message: params.message,\n      id: Date.now() * Math.random()\n    }]);\n  }; // ATTEMPT TO CREATE A NEW USER\n\n\n  const create_user = event => {\n    event.preventDefault(); // IF BOTH FIELDS ARE FILLED\n\n    if (input.name.length !== '' && input.number !== '') {\n      // CREATE THE PERSON\n      const person = {\n        name: input.name,\n        number: input.number\n      };\n      create_person(person).then(response => {\n        // UPDATE PEOPLE STATE\n        set_people([...people, response.data]); // RESET INPUT STATES\n\n        set_input({ ...input,\n          name: '',\n          number: ''\n        }); // PUSH POSITIVE NOTIFICATION\n\n        notify({\n          type: 'positive',\n          message: 'new user created.'\n        });\n      }); // axios.post('http://localhost:3001/api/persons', person).then(response => {\n      //     set_people([\n      //         ...people,\n      //         response.data\n      //     ])\n      //     set_input({\n      //         ...input,\n      //         name: '',\n      //         number: ''\n      //     })\n      //     // PUSH POSITIVE NOTIFICATION\n      //     notify({\n      //         type: 'positive',\n      //         message: 'new user created.',\n      //     })\n      // })\n      // OTHERWISE, CREATE ERROR NOTIFICATION\n    } else {\n      notify({\n        type: 'negative',\n        message: 'could not create user.'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        header: 'Filter Results',\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          label: 'Filter people by name',\n          value: input.filter,\n          func: event => update_field('filter', event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Phonebook, {\n        header: 'phonebook',\n        data: people,\n        keyword: input.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        header: 'add person',\n        func: create_user,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          label: 'What is the persons name?',\n          value: input.name,\n          func: event => update_field('name', event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Number, {\n          label: 'What is the persons\\'s number?',\n          value: input.number,\n          func: event => update_field('number', event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: 'Create User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n        header: 'notifications',\n        data: notifications\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Izn6yfFlRL8SYdwpJn4L0Ty/8Mw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Form","Text","Number","Button","Phonebook","Notifications","fetch_people","create_person","App","people","set_people","notifications","set_notifications","input","set_input","filter","name","number","then","response","status","result","payload","console","log","update_field","category","value","notify","params","type","message","id","Date","now","Math","random","create_user","event","preventDefault","length","person","data","target"],"sources":["/home/wickstjo/aalto/full-stack/module-03/phonebook-mongo/src/app.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Form, Text, Number, Button } from './components/form'\nimport Phonebook from './components/phonebook'\nimport Notifications from './components/notifications'\n\nimport { fetch_people, create_person } from './funcs/db'\nimport './interface/general.scss'\n\nconst App = () => {\n\n    // LIST OF PEOPLE\n    const [people, set_people] = useState([])\n\n    // LIST OF NOTIFICATIONS\n    const [notifications, set_notifications] = useState([])\n\n    // INPUT STATES\n    const [input, set_input] = useState({\n        filter: '',\n        name: '',\n        number: ''\n    })\n\n    // ON LOAD, FETCH ALL PEOPLE\n    useEffect(() => {\n        // axios.get('http://localhost:3001/api/persons').then(result => {\n        //     set_people(result.data)\n        // }).catch(error => {\n        //     console.log(error)\n        // })\n        fetch_people().then(response => {\n            if (response.status === 200) {\n                set_people(result.payload)\n            } else {\n\n            }\n            console.log(response)\n        })\n    }, [])\n\n    // UPDATE INPUT STATES\n    const update_field = (category, value) => {\n        set_input({\n            ...input,\n            [category]: value\n        })\n    }\n\n    // CREATE NOTIFICATION\n    const notify = (params) => {\n        set_notifications([\n            ...notifications, {\n                type: params.type,\n                message: params.message,\n                id: Date.now() * Math.random()\n            }\n        ])\n    }\n\n    // ATTEMPT TO CREATE A NEW USER\n    const create_user = (event) => {\n        event.preventDefault();\n        \n        // IF BOTH FIELDS ARE FILLED\n        if (input.name.length !== '' && input.number !== '') {\n\n            // CREATE THE PERSON\n            const person = {\n                name: input.name,\n                number: input.number\n            }\n\n            create_person(person).then(response => {\n\n                // UPDATE PEOPLE STATE\n                set_people([\n                    ...people,\n                    response.data\n                ])\n\n                // RESET INPUT STATES\n                set_input({\n                    ...input,\n                    name: '',\n                    number: ''\n                })\n    \n                // PUSH POSITIVE NOTIFICATION\n                notify({\n                    type: 'positive',\n                    message: 'new user created.',\n                })\n            })\n\n            // axios.post('http://localhost:3001/api/persons', person).then(response => {\n                \n            //     set_people([\n            //         ...people,\n            //         response.data\n            //     ])\n\n            //     set_input({\n            //         ...input,\n            //         name: '',\n            //         number: ''\n            //     })\n    \n            //     // PUSH POSITIVE NOTIFICATION\n            //     notify({\n            //         type: 'positive',\n            //         message: 'new user created.',\n            //     })\n            // })\n\n        // OTHERWISE, CREATE ERROR NOTIFICATION\n        } else {\n            notify({\n                type: 'negative',\n                message: 'could not create user.',\n            })\n        }\n    }\n\n    return (\n        <div className={ 'container' }>\n            <div>\n                <Form header={ 'Filter Results' }>\n                    <Text\n                        label={ 'Filter people by name' }\n                        value={ input.filter }\n                        func={\n                            event => update_field('filter', event.target.value)\n                        }\n                    />\n                </Form>\n                <Phonebook\n                    header={ 'phonebook' }\n                    data={ people }\n                    keyword={ input.filter }\n                />\n            </div>\n            <div>\n                <Form header={ 'add person' } func={ create_user }>\n                    <Text\n                        label={ 'What is the persons name?' }\n                        value={ input.name }\n                        func={\n                            event => update_field('name', event.target.value)\n                        }\n                    />\n                    <Number\n                        label={ 'What is the persons\\'s number?' }\n                        value={ input.number }\n                        func={\n                            event => update_field('number', event.target.value)\n                        }\n                    />\n                    <Button label={ 'Create User' } />\n                </Form>\n                <Notifications\n                    header={ 'notifications' }\n                    data={ notifications }\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}