{"ast":null,"code":"import axios from 'axios'; // BASE URL FOR REQUESTS\n\nconst base_url = 'http://localhost:3001/api/persons'; // RESOLVE RESPONSE\n\nconst resolve = response => {\n  switch (response.status) {\n    // ALL OK\n    case 200:\n      {\n        return {\n          status: response.status,\n          payload: response.data\n        };\n      }\n    // USER CREATED\n\n    case 201:\n      {\n        return {\n          status: response.status,\n          payload: response.data\n        };\n      }\n    // USER CREATED\n\n    case 500:\n      {\n        return {\n          status: response.status,\n          payload: response.data\n        };\n      }\n    // FALLBACK\n\n    default:\n      {\n        console.log('WEIRD RESPONSE STATUS');\n        return response;\n      }\n  }\n}; // FETCH EXISTING PEOPLE FROM DB\n\n\nconst fetch_people = async () => {\n  try {\n    const response = axios.get(base_url);\n    console.log(response);\n    return resolve(response);\n  } catch (error) {\n    return {\n      status: 500,\n      payload: error\n    };\n  }\n}; // CREATE NEW PERSON IN DB\n\n\nconst create_person = async person => {\n  const response = await axios.post(base_url, person);\n  return resolve(response);\n}; // REMOVE PERSON FROM DB\n\n\nconst remove_person = person_id => {\n  // CONCAT THE BASE URL\n  const url = base_url + '/' + person_id;\n  return axios.delete(url).then(response => {\n    return resolve(response);\n  });\n}; // REMOVE PERSON FROM DB\n\n\nconst update_person = (person_id, payload) => {\n  // CONCAT THE BASE URL\n  const url = base_url + '/' + person_id;\n  return axios.put(url, payload).then(response => {\n    return resolve(response);\n  });\n};\n\nexport { fetch_people, create_person, remove_person, update_person };","map":{"version":3,"names":["axios","base_url","resolve","response","status","payload","data","console","log","fetch_people","get","error","create_person","person","post","remove_person","person_id","url","delete","then","update_person","put"],"sources":["/home/wickstjo/aalto/full-stack/module-03/phonebook-mongo/src/funcs/db.js"],"sourcesContent":["import axios from 'axios'\n\n// BASE URL FOR REQUESTS\nconst base_url = 'http://localhost:3001/api/persons';\n\n// RESOLVE RESPONSE\nconst resolve = (response) => {\n    switch (response.status)Â {\n\n        // ALL OK\n        case 200: {\n            return {\n                status: response.status,\n                payload: response.data\n            }\n        }\n\n        // USER CREATED\n        case 201: {\n            return {\n                status: response.status,\n                payload: response.data\n            }\n        }\n\n        // USER CREATED\n        case 500: {\n            return {\n                status: response.status,\n                payload: response.data\n            }\n        }\n\n        // FALLBACK\n        default: {\n            console.log('WEIRD RESPONSE STATUS')\n            return response\n        }\n    }\n}\n\n// FETCH EXISTING PEOPLE FROM DB\nconst fetch_people = async() => {\n    try {\n        const response = axios.get(base_url);\n        console.log(response)\n        return resolve(response)\n\n    } catch(error) {\n        return {\n            status: 500,\n            payload: error\n        }\n    }\n}\n\n// CREATE NEW PERSON IN DB\nconst create_person = async(person) => {\n    const response = await axios.post(base_url, person);\n    return resolve(response)\n}\n\n// REMOVE PERSON FROM DB\nconst remove_person = (person_id) => {\n\n    // CONCAT THE BASE URL\n    const url = base_url + '/' + person_id\n\n    return axios.delete(url).then(response => {\n        return resolve(response)\n    })\n}\n\n// REMOVE PERSON FROM DB\nconst update_person = (person_id, payload) => {\n\n    // CONCAT THE BASE URL\n    const url = base_url + '/' + person_id\n\n    return axios.put(url, payload).then(response => {\n        return resolve(response)\n    })\n}\n\nexport {\n    fetch_people,\n    create_person,\n    remove_person,\n    update_person\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,mCAAjB,C,CAEA;;AACA,MAAMC,OAAO,GAAIC,QAAD,IAAc;EAC1B,QAAQA,QAAQ,CAACC,MAAjB;IAEI;IACA,KAAK,GAAL;MAAU;QACN,OAAO;UACHA,MAAM,EAAED,QAAQ,CAACC,MADd;UAEHC,OAAO,EAAEF,QAAQ,CAACG;QAFf,CAAP;MAIH;IAED;;IACA,KAAK,GAAL;MAAU;QACN,OAAO;UACHF,MAAM,EAAED,QAAQ,CAACC,MADd;UAEHC,OAAO,EAAEF,QAAQ,CAACG;QAFf,CAAP;MAIH;IAED;;IACA,KAAK,GAAL;MAAU;QACN,OAAO;UACHF,MAAM,EAAED,QAAQ,CAACC,MADd;UAEHC,OAAO,EAAEF,QAAQ,CAACG;QAFf,CAAP;MAIH;IAED;;IACA;MAAS;QACLC,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACA,OAAOL,QAAP;MACH;EA9BL;AAgCH,CAjCD,C,CAmCA;;;AACA,MAAMM,YAAY,GAAG,YAAW;EAC5B,IAAI;IACA,MAAMN,QAAQ,GAAGH,KAAK,CAACU,GAAN,CAAUT,QAAV,CAAjB;IACAM,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACA,OAAOD,OAAO,CAACC,QAAD,CAAd;EAEH,CALD,CAKE,OAAMQ,KAAN,EAAa;IACX,OAAO;MACHP,MAAM,EAAE,GADL;MAEHC,OAAO,EAAEM;IAFN,CAAP;EAIH;AACJ,CAZD,C,CAcA;;;AACA,MAAMC,aAAa,GAAG,MAAMC,MAAN,IAAiB;EACnC,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAN,CAAWb,QAAX,EAAqBY,MAArB,CAAvB;EACA,OAAOX,OAAO,CAACC,QAAD,CAAd;AACH,CAHD,C,CAKA;;;AACA,MAAMY,aAAa,GAAIC,SAAD,IAAe;EAEjC;EACA,MAAMC,GAAG,GAAGhB,QAAQ,GAAG,GAAX,GAAiBe,SAA7B;EAEA,OAAOhB,KAAK,CAACkB,MAAN,CAAaD,GAAb,EAAkBE,IAAlB,CAAuBhB,QAAQ,IAAI;IACtC,OAAOD,OAAO,CAACC,QAAD,CAAd;EACH,CAFM,CAAP;AAGH,CARD,C,CAUA;;;AACA,MAAMiB,aAAa,GAAG,CAACJ,SAAD,EAAYX,OAAZ,KAAwB;EAE1C;EACA,MAAMY,GAAG,GAAGhB,QAAQ,GAAG,GAAX,GAAiBe,SAA7B;EAEA,OAAOhB,KAAK,CAACqB,GAAN,CAAUJ,GAAV,EAAeZ,OAAf,EAAwBc,IAAxB,CAA6BhB,QAAQ,IAAI;IAC5C,OAAOD,OAAO,CAACC,QAAD,CAAd;EACH,CAFM,CAAP;AAGH,CARD;;AAUA,SACIM,YADJ,EAEIG,aAFJ,EAGIG,aAHJ,EAIIK,aAJJ"},"metadata":{},"sourceType":"module"}